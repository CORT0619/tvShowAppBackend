// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// models, enums, types
enum Role {
  USER
  ADMIN
}

model User {
  id       Int          @id @default(autoincrement())
  // id       String       @id @default(uuid())
  userId   String       @db.VarChar(255) @unique
  name     String       @db.VarChar(255)
  email    String       @db.VarChar(255) @unique
  password String       @db.VarChar(255)
  role     Role         @default(USER)
  photo    String?      @db.VarChar(255)
  tvshow   UserTvShow[]
  episodes UserEpisodes[]
}

model TvShow {
  id        Int     @id @default(autoincrement())
  name      String  @db.VarChar(255)
  tvrageId  Int?    @db.Integer
  thetvdbId Int?    @db.Integer
  tvmazeId  Int     @db.Integer
  imdbId    String  @db.VarChar(15) // can probably be a char
  user      UserTvShow[]

  @@index([tvmazeId], type: Hash)
}

model Episode {
  id        Int       @id @default(autoincrement())
  episodeId Int       @db.Integer @unique
  users     UserEpisodes[]
}

model UserTvShow {
  user      User  @relation(fields: [userId], references: [id])
  userId    Int
  tvShowId    Int
  tvShow      TvShow @relation(fields: [tvShowId], references: [id])
  @@id(name: "userTvShow", fields: [tvShowId, userId])
}

model UserEpisodes {
  watched   Boolean   @default(false)
  episode   Episode   @relation(fields: [episodeId], references: [id])
  episodeId Int
  user      User      @relation(fields: [userId], references: [id])
  userId    Int       
  @@id(name: "userEpisode", fields: [episodeId, userId])
}
